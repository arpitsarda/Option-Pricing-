# -*- coding: utf-8 -*-
"""Option Pricing Models

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iBjwj_5FlYnB_iwoq23Ie4X79j1hopOT
"""

import yfinance as yf
import numpy as np
from scipy.stats import norm

# Fetch historical data for NIFTY 50
nifty = yf.Ticker("^NSEI")
hist = nifty.history(period="1y")

# Calculate historical volatility
hist['Log Returns'] = np.log(hist['Close'] / hist['Close'].shift(1))
volatility = hist['Log Returns'].std() * np.sqrt(252)  # Annualized volatility

# Current stock price, strike price, time to expiration, risk-free rate
S0 = hist['Close'][-1]
X = S0 * 1.05  # Assuming a 5% higher strike price
T = 0.5  # 6 months to expiration
r = 0.0687  # Current 10-year government bond yield as risk-free rate

# Black-Scholes Model
def black_scholes_call(S, X, T, r, sigma):
    d1 = (np.log(S / X) + (r + 0.5 * sigma**2) * T) / (sigma * np.sqrt(T))
    d2 = d1 - sigma * np.sqrt(T)
    call_price = S * norm.cdf(d1) - X * np.exp(-r * T) * norm.cdf(d2)
    return call_price

# Binomial Model
def binomial_call(S, X, T, r, sigma, steps):
    dt = T / steps
    u = np.exp(sigma * np.sqrt(dt))
    d = 1 / u
    p = (np.exp(r * dt) - d) / (u - d)

    # Initialize asset prices at maturity
    asset_prices = np.zeros(steps + 1)
    asset_prices[0] = S * d**steps
    for i in range(1, steps + 1):
        asset_prices[i] = asset_prices[i - 1] * u / d

    # Initialize option values at maturity
    option_values = np.maximum(0, asset_prices - X)

    # Step back through the tree
    for i in range(steps - 1, -1, -1):
        for j in range(i + 1):
            option_values[j] = np.exp(-r * dt) * (p * option_values[j + 1] + (1 - p) * option_values[j])

    return option_values[0]

# Calculate the call option prices
bs_call_price = black_scholes_call(S0, X, T, r, volatility)
binomial_call_price = binomial_call(S0, X, T, r, volatility, 100)

# Print the results
print(f"Black-Scholes Call Option Price: ₹{bs_call_price:.2f}")
print(f"Binomial Call Option Price: ₹{binomial_call_price:.2f}")